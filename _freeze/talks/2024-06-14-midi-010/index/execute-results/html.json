{
  "hash": "1e1ce04d91d822e26ba65d0c5bde801e",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: midi\nsubtitle: \"A Shiny app for designing diffusion MRI protocols\"\nauthor:\n  - name: A. Stamm\n    affiliation: Department of Mathematics Jean Leray, UMR CNRS 6629, Nantes University, Ecole Centrale de Nantes, France\n    corresponding: true\n    orcid: 0000-0002-8725-3654\nformat:\n  revealjs:\n    footer: \"Rencontres R 2024 - Vannes - <aymeric.stamm@cnrs.fr>\"\n    slide-number: true\n    logo: images/logo-lmjl.png\n    date: 2024-06-14\n    theme: simple\n    scrollable: true\ndate: 2024-06-14\nbibliography: references.bib\nimage: rr2024.png\ncategories: [software]\n---\n\n\n\n\n# Context\n\n## Brain microstructure\n\n![<https://giphy.com/gifs/2bYewTk7K2No1NvcuK>](https://i.giphy.com/media/v1.Y2lkPTc5MGI3NjExYmluejVoeDkyMHd4dHFiazZ2b3h1a2pmanI0ZDQzOW9qcHo0dXJsaCZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/2bYewTk7K2No1NvcuK/giphy.gif){fig-align=\"center\"}\n\n## What is of interest ?\n\n::: {layout-ncol=2}\n### Neural transmission\n\n![<https://opentextbc.ca/biology/chapter/16-1-neurons-and-glial-cells/>](images/schema-axon-removebg-preview.jpg){fig-align=\"center\"}\n\n### Parameters of interest\n\n- Axonal density: $0.5-0.8$;\n- Axon diameter: $0.5-10\\,\\mu m$;\n- Glial cell density: $0.1-0.5$;\n- Glial cell diameter: $20-30\\,\\mu m$.\n:::\n\n## What can we see to the naked eye ?\n\n![](images/naked-eye-2.png){fig-align=\"center\"}\n\n## Principle of diffusion MRI\n\n::: {layout-ncol=2}\n\n- The Human body is made of $70\\%$ of water.\n- Water molecules are in constant motion due to thermal agitation.\n- Water trapped in biological tissues is hindered by the presence of cell membranes, axons, dendrites, etc.\n\n![<https://radiologykey.com/concepts-of-diffusion-in-mri/>](images/restricted_diffusion.gif){fig-align=\"center\"}\n:::\n\n## Principle of diffusion MRI (2/2)\n\n::: {layout-ncol=2}\n\n- Apply magnetic field gradients $\\mathbf{q}$ in different directions;\n- Measure the signal attenuation $S(\\mathbf{q})$ induced by restricted diffusion;\n\n![@ren2021q](images/video0.gif){fig-align=\"center\"}\n:::\n\n::: {layout-ncol=2}\n\n- Measured signal carries information on the microstructure.\n\n$$\nS(\\mathbf{q}) = \\int_{\\mathbb{R}^3} \\rho(\\mathbf{r}) e^{-i \\mathbf{q} \\cdot \\mathbf{r}} \\, d\\mathbf{r}\n$$\n\n:::\n\n## Voxel size VS microstructure\n\n![@palombo2020sandi](images/voxel-size-vs-microstructure-zoom-b.jpg){fig-align=\"center\"}\n\n$$\nS(\\mathbf{q}) = \\sum_{i=1}^N f_i S_i(\\mathbf{q}) \\quad \\text{with} \\quad S_i(\\mathbf{q}) = \\int_{\\mathbb{R}^3} \\rho_i(\\mathbf{r}) e^{-i \\mathbf{q} \\cdot \\mathbf{r}} \\, d\\mathbf{r}\n$$\n\n## Compartment modeling\n\n![@fick2019dmipy](images/mcm-modeling.jpg){fig-align=\"center\"}\n\n## Data acquisition and modeling {.smaller}\n\n:::: {.columns}\n\n::: {.column width=50%}\n::: {.callout-note icon=false}\n## Imaging parameters\n\n![@fick2019dmipy](images/pgse.jpg){fig-align=\"center\"}\n\n$$\n\\mathbf{q} = \\frac{\\gamma \\delta G}{2 \\pi} \\mathbf{n}\n$$\n\n- $\\gamma$: gyromagnetic ratio;\n- $\\delta$: gradient duration;\n- $G$: gradient amplitude;\n- $\\mathbf{n}$: gradient direction.\n:::\n:::\n\n::: {.column width=50%}\n::: {.callout-note icon=false}\n## Sensitivity to microstructure\n\nFreely diffusing water:\n\n$$ S(\\mathbf{q}) = S_0 \\exp \\left( - b D \\right) $$\n\nwith $b = \\gamma^2 \\delta^2 G^2 \\left( \\Delta - \\frac{\\delta}{3} \\right)$.\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-revealjs/unnamed-chunk-1-1.png){width=960}\n:::\n:::\n\n:::\n:::\n\n::::\n\n# midi -- a tool powered by R and Shiny\n\n## Overview\n\n::: {.callout-warning icon=false}\n## Objective\n- Shiny for user-friendly interface to simulate MR signals from microstructure models;\n- Design best experimental protocols for accurate estimation of a given set of microstructural parameters of interest.\n:::\n\n::: {.callout-note icon=false}\n## How does it work ?\n- choose a set of experimental conditions;\n- choose a multi-compartment model to describe microstructure;\n- pick a microstructural parameter of interest;\n- fix the other model parameters (with sensible defaults provided by the app);\n- plot the MR signal wrt the microstructural parameter of interest.\n:::\n\n# The midi package\n\n## An R6-based package\n\n\n::: {.cell .big-code}\n\n```{.r .big-code .cell-code  code-line-numbers=\"1-8|52-66|76-78|88-90\"}\n#' Base compartment class\n#'\n#' @description The base class for compartment models.\n#'\n#' @keywords internal\nBaseCompartment <- R6::R6Class(\n  \"BaseCompartment\",\n  public = list(\n    #' @description Computes the signal attenuation predicted by the model.\n    #'\n    #' @param small_delta A numeric value specifying the duration of the\n    #'   gradient pulse in milliseconds.\n    #' @param big_delta A numeric value specifying the duration between the\n    #'   gradient pulses in milliseconds.\n    #' @param G A numeric value specifying the strength of the gradient in\n    #'   mT.\\eqn{\\mu}m\\eqn{^{-1}}.\n    #' @param direction A numeric vector specifying the direction of the\n    #'   gradient. Defaults to `c(0, 0, 1)`.\n    #' @param echo_time A numeric value specifying the echo time in\n    #'   milliseconds.\n    #' @param n_max An integer value specifying the maximum order of the Bessel\n    #'   function. Defaults to `20L`.\n    #' @param m_max An integer value specifying the maximum number of extrema\n    #'   for the Bessel function. Defaults to `50L`.\n    #'\n    #' @return A numeric value storing the predicted signal attenuation.\n    #'\n    #' @examples\n    #' freeComp <- FreeCompartment$new()\n    #' freeComp$get_signal(small_delta = 30, big_delta = 30, G = 0.040)\n    #'\n    #' sphereComp <- SphereCompartment$new()\n    #' sphereComp$get_signal(small_delta = 30, big_delta = 30, G = 0.040)\n    #'\n    #' sodermanComp <- SodermanCompartment$new()\n    #' sodermanComp$get_signal(small_delta = 30, big_delta = 30, G = 0.040)\n    #'\n    #' staniszComp <- StaniszCompartment$new()\n    #' staniszComp$get_signal(small_delta = 30, big_delta = 30, G = 0.040)\n    #'\n    #' neumanComp <- NeumanCompartment$new()\n    #' neumanComp$get_signal(\n    #'   small_delta = 30, big_delta = 30, G = 0.040,\n    #'   echo_time = 40\n    #' )\n    #'\n    #' callaghanComp <- CallaghanCompartment$new()\n    #' callaghanComp$get_signal(small_delta = 30, big_delta = 30, G = 0.040)\n    #'\n    #' vanGelderenComp <- VanGelderenCompartment$new()\n    #' vanGelderenComp$get_signal(small_delta = 30, big_delta = 30, G = 0.040)\n    get_signal = function(small_delta, big_delta, G,\n                          direction = c(0, 0, 1),\n                          echo_time = NULL,\n                          n_max = 20L,\n                          m_max = 50L) {\n      private$compute_signal(\n        small_delta = small_delta,\n        big_delta = big_delta,\n        G = G,\n        direction = direction,\n        echo_time = echo_time,\n        n_max = n_max,\n        m_max = m_max\n      )\n    },\n\n    #' @description Returns the names of the compartment parameters\n    #'\n    #' @return A character vector storing the names of the compartment\n    #'   parameters.\n    #'\n    #' @examples\n    #' freeComp <- FreeCompartment$new()\n    #' freeComp$get_parameter_names()\n    get_parameter_names = function() {\n      names(private$parameters())\n    },\n\n    #' @description Returns the values of the compartment parameters\n    #'\n    #' @return A numeric vector storing the values of the compartment\n    #'   parameters.\n    #'\n    #' @examples\n    #' freeComp <- FreeCompartment$new()\n    #' freeComp$get_parameters()\n    get_parameters = function() {\n      private$parameters()\n    }\n  )\n)\n```\n:::\n\n\nShould faciliate implementation of new compartment models.\n\n## Class hierarchy\n\n![](images/class-hierarchy/class-hierarchy.002.png)\n\n# The midi Shiny application\n\n## V1 powered by [Quarto dashboard](https://quarto.org/docs/dashboards/) {.smaller}\n\n[![](images/app-v1.png){fig-align=\"center\" width=75%}](https://midi-pastrami.apps.math.cnrs.fr)\n\n- I learned a lot about Quarto dashboards\n- The design is not very appealing\n- The engine behind the scene is [**bslib**](https://rstudio.github.io/bslib/index.html)\n\n## A better app design\n\n$$\n\\scriptsize{\n\\color{cornflowerblue}{S}(\\color{salmon}{\\mathbf{q}}; \\Theta, \\mathbf{f}) = \\color{lightgreen}{f_\\mathrm{free}} \\cdot S_\\mathrm{free}(\\color{salmon}{\\mathbf{q}}) + \\color{lightgreen}{f_\\mathrm{sphere}} \\cdot \\color{gold}{S_\\mathrm{sphere}}(\\color{salmon}{\\mathbf{q}}; \\color{lightgreen}{\\Theta_\\mathrm{sphere}}) \\\\\n+ \\color{gold}{f_\\mathrm{cylbundle}} \\cdot \\color{gold}{S_\\mathrm{cylbundle}}(\\color{salmon}{\\mathbf{q}}; \\color{lightgreen}{\\Theta_\\mathrm{cylbundle})}, \\quad f_\\mathrm{free} + f_\\mathrm{sphere} + f_\\mathrm{cylbundle} = 1\n}\n$$\n\n![Courtesy of Manon Simonot](images/app-design.jpg){fig.align=\"center\"}\n\n## V2 powered by [**shiny**](https://shiny.posit.co) and [**bslib**](https://rstudio.github.io/bslib/index.html)\n\n![](images/app1.png){fig-align=\"center\"}\n\n## V2 powered by [**shiny**](https://shiny.posit.co) and [**bslib**](https://rstudio.github.io/bslib/index.html)\n\n![](images/app2.png){fig-align=\"center\"}\n\n## V2 powered by [**shiny**](https://shiny.posit.co) and [**bslib**](https://rstudio.github.io/bslib/index.html)\n\n![](images/app3.png){fig-align=\"center\"}\n\n## V2 powered by [**shiny**](https://shiny.posit.co) and [**bslib**](https://rstudio.github.io/bslib/index.html)\n\n![](images/app4.png){fig-align=\"center\"}\n\n## V2 powered by [**shiny**](https://shiny.posit.co) and [**bslib**](https://rstudio.github.io/bslib/index.html)\n\n![](images/app5.png){fig-align=\"center\"}\n\n## V2 powered by [**shiny**](https://shiny.posit.co) and [**bslib**](https://rstudio.github.io/bslib/index.html)\n\n![](images/app6.png){fig-align=\"center\"}\n\n## V2 powered by [**shiny**](https://shiny.posit.co) and [**bslib**](https://rstudio.github.io/bslib/index.html)\n\n![](images/app7.png){fig-align=\"center\"}\n\n::: {.notes}\n1. Card\n2. Accordion\n3. Popover\n4. shinyjs: enable / disable sliders\n5. Weight constraints\n:::\n\n## [**rhino**](https://appsilon.github.io/rhino/index.html)isation (1/2)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(rhino)\nrhino::init()\n```\n:::\n\n\n![](images/rhino-tree.png){fig-align=\"center\" width=\"450\"}\n\n## [**rhino**](https://appsilon.github.io/rhino/index.html)isation (2/2)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(rhino)\nrhino::init()\n```\n:::\n\n\n:::: {.columns}\n\n::: {.column width=\"40%\"}\n::: {.callout-note icon=false}\n## `app` directory\n\n- `main.R`: app source code;\n- `js`: javascript code;\n- `logic`: R objects other than UI/Server;\n- `static`: images or other static files;\n- `styles`: `scss` code;\n- `view`: modules.\n:::\n:::\n\n::: {.column width=\"60%\"}\n::: {.callout-note icon=false}\n## Root files\n\n- `app.R`: contains only `rhino::app()` to launch the application;\n- `dependencies.R`: lists all dependencies;\n- `renv/renv.lock`: handles dependency versions;\n- `config.yml/rhino.yml`: configuration files;\n- `tests`: folder containing files for testing.\n:::\n:::\n\n::::\n\n## References\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}